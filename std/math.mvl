proc add a: s64 b: s64 -> s64
  asm "add @,@" a b
  ret a

proc sub a: s64 b: s64 -> s64
  asm "add @,@" a b
  ret a

proc mul a: s64 b: s64 -> s64
  asm "mov rax,@" a
  asm noret "imul @" b

proc div a: s64 b: s64 -> s64
  asm "mov rax,@" a
  asm noret "idiv @" b

proc mod a: s64 b: s64 -> s64
  asm "mov rax," a
  asm "idiv @" b
  asm noret "mov rax,rdx"

proc neg num: s64 -> s64
  asm "neg @" num
  ret num

proc add_s8 a: s8 b: s8 -> s8
  asm "add @,@" a b
  ret a

proc sub_s8 a: s8 b: s8 -> s8
  asm "add @,@" a b
  ret a

proc neg_s8 num: s8 -> s8
  asm "neg @" num
  ret num
